{"ast":null,"code":"var _jsxFileName = \"/home/afran/dbms-mini-project/client/src/components/PaymentPage.js\",\n  _s = $RefreshSig$();\n// src/components/PaymentPage.js\n\nimport React, { useState } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\n\n// Make sure to replace this with your actual public key from Stripe\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe('your-public-key-from-stripe');\nconst PaymentForm = () => {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!stripe || !elements) {\n      return;\n    }\n    setLoading(true);\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement)\n    });\n    if (error) {\n      setError(error.message);\n      setLoading(false);\n    } else {\n      // Handle payment submission to your backend\n      const response = await fetch('/api/charge', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          paymentMethodId: paymentMethod.id\n        })\n      });\n      const paymentResult = await response.json();\n      if (paymentResult.error) {\n        setError(paymentResult.error);\n      } else {\n        alert('Payment successful!');\n      }\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: loading || !stripe,\n      children: loading ? 'Processing...' : 'Pay Now'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentForm, \"OSD33JfIILZ1T7xA7ylz1NjOWy4=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = PaymentForm;\nconst PaymentPage = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Payment Page\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripePromise,\n    children: /*#__PURE__*/_jsxDEV(PaymentForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 66,\n  columnNumber: 3\n}, this);\n_c2 = PaymentPage;\nexport default PaymentPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"PaymentForm\");\n$RefreshReg$(_c2, \"PaymentPage\");","map":{"version":3,"names":["React","useState","loadStripe","Elements","CardElement","useStripe","useElements","jsxDEV","_jsxDEV","stripePromise","PaymentForm","_s","stripe","elements","loading","setLoading","error","setError","handleSubmit","event","preventDefault","paymentMethod","createPaymentMethod","type","card","getElement","message","response","fetch","method","headers","body","JSON","stringify","paymentMethodId","id","paymentResult","json","alert","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","className","disabled","_c","PaymentPage","_c2","$RefreshReg$"],"sources":["/home/afran/dbms-mini-project/client/src/components/PaymentPage.js"],"sourcesContent":["// src/components/PaymentPage.js\n\nimport React, { useState } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\n\n// Make sure to replace this with your actual public key from Stripe\nconst stripePromise = loadStripe('your-public-key-from-stripe');\n\nconst PaymentForm = () => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      return;\n    }\n\n    setLoading(true);\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement),\n    });\n\n    if (error) {\n      setError(error.message);\n      setLoading(false);\n    } else {\n      // Handle payment submission to your backend\n      const response = await fetch('/api/charge', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ paymentMethodId: paymentMethod.id }),\n      });\n\n      const paymentResult = await response.json();\n\n      if (paymentResult.error) {\n        setError(paymentResult.error);\n      } else {\n        alert('Payment successful!');\n      }\n\n      setLoading(false);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <CardElement />\n      {error && <div className=\"error\">{error}</div>}\n      <button type=\"submit\" disabled={loading || !stripe}>\n        {loading ? 'Processing...' : 'Pay Now'}\n      </button>\n    </form>\n  );\n};\n\nconst PaymentPage = () => (\n  <div>\n    <h1>Payment Page</h1>\n    <Elements stripe={stripePromise}>\n      <PaymentForm />\n    </Elements>\n  </div>\n);\n\nexport default PaymentPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}